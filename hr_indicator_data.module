<?php

/**
 * @file
 * Code for the hr_indicator_data feature.
 */

include_once 'hr_indicator_data.features.inc';

/**
 * Implements hook_menu().
 */
function hr_indicator_data_menu() {
  $items['crf/indicator-data/table'] = array(
    'title' => 'Indicator Data',
    'page callback' => 'hr_indicator_data_table',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['crf/indicator-data/graph'] = array(
    'title' => 'Graph',
    'page callback' => 'hr_indicator_data_graph',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function hr_indicator_data_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  switch ($form['#id']) {
    case 'views-exposed-form-indicator-data-table':
    case 'views-exposed-form-indicator-data-graph':
      $form['field_crf_request_target_id'] = hr_indicator_data_convert_form_textfield('crf_request');
      $form['field_ind_def_target_id'] = hr_indicator_data_convert_form_textfield('indicator_definition');
      $form['field_cluster_obj_target_id'] = hr_indicator_data_convert_form_textfield('cluster_objectives');
      break;
  }
}


/**
 * Implements hook_theme().
 */
function hr_indicator_data_theme($existing, $type, $theme, $path) {
  return array(
    'indicator_data_node_form' => array(
      'template' => 'indicator-data-node-form',
      'render element' => 'form',
      'path' => drupal_get_path('module', 'hr_indicator_data') . '/templates',
    ),
  );
}

function hr_indicator_data_table() {
  $output = '';
  $output .= l('Graph', 'crf/indicator-data/graph');
  $output .= views_embed_view('indicator_data', 'table');
  return $output;
}

function hr_indicator_data_graph() {
  $output = '';
  $output .= l('Table', 'crf/indicator-data/table');
  $output .= views_embed_view('indicator_data', 'graph');
  return $output;
}

function hr_indicator_data_preprocess_indicator_data_node_form(&$variables) {
  $form = &$variables['form'];
  
  $headers = array('', t('Estimate'), t('Female'), t('Male'));
  
  $rows = array(
    array(
      t('Need'),
      drupal_render($form['field_ind_need']),
      drupal_render($form['field_ind_need_female']),
      drupal_render($form['field_ind_need_male']),
    ),
    array(
      t('Target'),
      drupal_render($form['field_ind_target']),
      drupal_render($form['field_ind_target_female']),
      drupal_render($form['field_ind_target_male']),
    ),
    array(
      t('Coverage'),
      drupal_render($form['field_ind_coverage']),
      drupal_render($form['field_ind_coverage_female']),
      drupal_render($form['field_ind_coverage_male']),
    ),
  );
  
  $variables['indicators'] = theme('table', array(
    'header' => $headers,
    'rows' => $rows,
    'attributes' => array('class' => 'hr-indicator-data-indicators'),
    'caption' => '',
    'colgroups' => array(),
    'sticky' => array(),
    'empty' => array(),
  ));
}

function hr_indicator_data_convert_form_textfield($content_type) {
  $options = array('' => '- Any -');
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $content_type)
    ->execute();
  if (!empty($result)) {
    foreach (array_keys($result['node']) as $nid) {
      $node = node_load($nid);
      $options[$nid] = $node->title;
    }
  }
  return array(
    '#type' => 'select',
    '#options' => $options,
    '#default_value' => '',
  );
}

